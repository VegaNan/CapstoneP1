@model IEnumerable<Item>
@using Microsoft.AspNetCore.Identity
@using AspNetCore.Identity.Mongo.Model;

@inject SignInManager<MongoUser> SignInManager
@inject UserManager<MongoUser> UserManager

@if (Model != null)

{

    <label>Search for an item: </label>
    <form asp-controller="Public" asp-action="Search" method="get">
        <label for="title">Title Contains: </label>
        <input type="text" id="title" name="title" />
        <button class="button" type="submit">Search</button>
    </form>

    <label>Filter: </label>
    <form asp-controller="Public" asp-action="Filter" method="get">
        <button class="button" type="submit">Filter</button>
    </form>

    foreach (Item v in Model)
    {
        <div class="itemContainer">

            <partial name="_ItemPartialView" for="@v" />
            <form asp-controller="Public" asp-action="GetItem" asp-route-id="@v.ItemId" method="get">
                <button typse=" submit" class="button">View</button>
            </form>
            @if (SignInManager.IsSignedIn(User) && UserManager.IsInRoleAsync(UserManager.GetUserAsync(User).Result, "admin").Result)
            {
                <form asp-controller="Admin" asp-action="DeleteItem" asp-route-id="@v.ItemId" method="post">
                    <button type="submit" class="button">Delete</button>
                </form>
            }
            else
            {
                <form asp-controller="Public" asp-action="AddItemToBooking" asp-route-id="@v.ItemId" method="post">
                    <button type="submit" class="button">Add to booking</button>
                </form>
            }
        </div>
    }
}
else
{
    <p>There are no items to display</p>
}